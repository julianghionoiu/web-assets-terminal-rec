{"version": 2, "width": 178, "height": 21, "timestamp": 1574618102, "env": {"SHELL": "/bin/zsh", "TERM": "xterm-256color"}}
[3.859389, "o", "\u001b[1;21r\u001b[?12h\u001b[?12l\u001b[27m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[?25l\u001b[21;1H\"test.txt\""]
[3.859915, "o", " 30L, 1200C"]
[3.860271, "o", "\u001b[2;1H▽\u001b[6n\u001b[2;1H  \u001b[1;1H"]
[3.860777, "o", "\u001b[1;1HCHL_R1\r\nROUND 1 - Our supermarket\r\nThe purpose of this challenge is to implement a supermarket checkout that calculates the total price of a number of items.\r\n\r\nIn a normal supermarket, things are identified using Stock Keeping Units, or SKUs.\r\nIn our store, we'll use individual letters of the alphabet (A, B, C, and so on).\r\nOur goods are priced individually. In addition, some items are multi-priced: buy n of them, and they'll cost you y pounds.\r\nFor example, item A might cost 50 pounds individually, but this week we have a special offer:\r\n buy three As and they'll cost you 130.\r\n\r\nOur price table and offers:\r\n+------+-------+----------------+\r\n| Item | Price | Special offers |\r\n+------+-------+----------------+\r\n| A    | 50    | 3A for 130     |\r\n| B    | 30    | 2B for 45      |\r\n| C    | 20    |\u001b[16C|\r\n| D    | 15    |\u001b[16C|\r\n+------+-------+----------------+\u001b[1;1H\u001b[?25h"]
[3.860906, "o", "\u001b[?12$p"]
[4.91843, "o", "\r\n"]
[5.363964, "o", "\r\n"]
[5.596427, "o", "\r\n"]
[5.787626, "o", "\r\n"]
[5.948527, "o", "\r\n"]
[6.091789, "o", "\r\n"]
[6.252415, "o", "\r\n"]
[6.403878, "o", "\r\n"]
[6.564282, "o", "\r\n"]
[6.732036, "o", "\r\n"]
[6.891714, "o", "\r\n"]
[7.067836, "o", "\r\n"]
[7.235616, "o", "\r\n"]
[7.419841, "o", "\r\n"]
[7.77231, "o", "\r\n"]
[7.94762, "o", "\r\n"]
[8.12425, "o", "\r\n"]
[8.28351, "o", "\r\n"]
[8.459831, "o", "\r\n"]
[8.627749, "o", "\u001b[?25l\u001b[1;20r\u001b[20;1H\r\n\u001b[1;21r\u001b[21;1H\u001b[K\u001b[20;1H\u001b[?25h"]
[8.795687, "o", "\u001b[?25l\u001b[1;20r\u001b[20;1H\r\n\u001b[1;21r\u001b[20;1HNotes:\r\u001b[?25h"]
[9.212342, "o", "\u001b[?25l\u001b[1;20r\u001b[20;1H\r\n\u001b[1;21r\u001b[20;2H- For any illegal input return -1\r\u001b[?25h"]
[9.380203, "o", "\u001b[?25l\u001b[1;20r\u001b[20;1H\r\n\u001b[1;21r\u001b[20;1H\u001b[?25h"]
[9.555655, "o", "\u001b[?25l\u001b[1;20r\u001b[20;1H\r\n\u001b[1;21r\u001b[20;1HIn order to complete the round you need to implement the following method:\r\u001b[?25h"]
[9.716171, "o", "\u001b[?25l\u001b[1;20r\u001b[20;1H\r\n\u001b[1;21r\u001b[20;6Hchecklite(String) -> Integer\r\u001b[?25h"]
[10.027571, "o", "\u001b[19;1H"]
[10.195748, "o", "\u001b[18;1H"]
[10.333118, "o", "\u001b[17;1H"]
[10.627501, "o", " "]
[10.80358, "o", "- "]
[11.619916, "o", "For "]
[12.083811, "o", "\u001b[26C"]
[12.71555, "o", "\b"]
[14.452347, "o", "\u001b[?25l\u001b[21;1H\u001b[1m-- INSERT --"]
[14.452675, "o", "\u001b[m\u001b[17;33H1\u001b[17;34H\u001b[K\u001b[17;33H\u001b[?25h"]
[17.51514, "o", "\u001b[?25lx1\b\u001b[?25h"]
[17.732218, "o", "\u001b[?25ly1\b\u001b[?25h"]
[18.044253, "o", "\u001b[?25lz1\b\u001b[?25h"]
[18.724683, "o", "\u001b[21;1H\u001b[K\u001b[17;35H"]
[19.531252, "o", "\u001b[?25l"]
[19.532105, "o", "\u001b[?25h\r\n"]
[19.731337, "o", "\u001b[19;35H"]
[19.875283, "o", "\u001b[20;33H"]
[20.002679, "o", "\u001b[?25l\u001b[1;20r\u001b[20;1H\r\n\u001b[1;21r\u001b[20;1H\u001b[?25h"]
[20.154677, "o", "\u001b[?25l\u001b[1;20r\u001b[20;1H\r\n\u001b[1;21r\u001b[20;1HWhere:\b\u001b[?25h"]
[20.643151, "o", "\u001b[19;1H"]
[21.171285, "o", "\u001b[18;33H"]
[21.587459, "o", "\u001b[?25l\u001b[1;20r\u001b[1;1H\u001b[8L\u001b[1;21r\u001b[1;1HCHL_R1\r\nROUND 1 - Our supermarket\r\nThe purpose of this challenge is to implement a supermarket checkout that calculates the total price of a number of items.\r\n\r\nIn a normal supermarket, things are identified using Stock Keeping Units, or SKUs.\r\nIn our store, we'll use individual letters of the alphabet (A, B, C, and so on).\r\nOur goods are priced individually. In addition, some items are multi-priced: buy n of them, and they'll cost you y pounds.\r\nFor example, item A might cost 50 pounds individually, but this week we have a special offer:\r\n\r\n\u001b[?25h"]
[22.611729, "o", "\u001b[?25l\u001b[21;1H:\u001b[?2004h"]
[22.611984, "o", "\u001b[?25h"]
[22.88313, "o", "w"]
[22.963654, "o", "q"]
[23.468058, "o", "\r"]
[23.468354, "o", "\u001b[?25l\u001b[?2004l\"test.txt\""]
[23.469857, "o", " 30L, 1202C written"]
[23.576229, "o", "\r\r\r\n\u001b[?2004l\u001b[?1l\u001b>\u001b[?25h\u001b[?1049l"]
[23.577464, "o", "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                                                                                                                                 \r \r"]
[23.577631, "o", "\u001b]2;julianghionoiu@Julians-Box: ~/Documents/Work/Projects/tdl/web-assets-terminal-rec\u0007"]
[23.577781, "o", "\u001b]1;..-terminal-rec\u0007\u001b]133;D;0\u0007"]
[23.577955, "o", "\u001b]1337;RemoteHost=julianghionoiu@Julians-Box.local\u0007\u001b]1337;CurrentDir=/Users/julianghionoiu/Documents/Work/Projects/tdl/web-assets-terminal-rec\u0007"]
[23.627241, "o", "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b]133;A\u0007\u001b[01;32m➜  \u001b[36mweb-assets-terminal-rec\u001b[00m \u001b[01;34mgit:(\u001b[31mmaster\u001b[34m) \u001b[33m✗\u001b[00m \u001b]133;B\u0007\u001b[K"]
[23.627423, "o", "\u001b[?1h\u001b=\u001b[?2004h"]
[24.675019, "o", "\u001b[?2004l\r\r\n"]
